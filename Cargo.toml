[package]
name = "rustfft-jl"
version = "0.1.0"
edition = "2021"
authors = ["Thomas van Doornmalen <thomas.vandoornmalen@gmail.com>"]
description = "Julia binding library for RustFFT"
homepage = "https://github.com/Taaitaaiger/rustfft-jl"
repository = "https://github.com/Taaitaaiger/rustfft-jl"
license = "MIT"
rust-version = "1.65"

[features]
# Because this library depends on jlrs it must declare the version of Julia it's compatible with
# by enabling a version feature. These features are "reexported", requiring one to be set at buld
# time. For example, to compile a library that's compatible with Julia 1.8, use 
# `cargo build --features=julia-1-8`.
julia-1-6 = ["jlrs/julia-1-6"]
julia-1-7 = ["jlrs/julia-1-7"]
julia-1-8 = ["jlrs/julia-1-8"]
julia-1-9 = ["jlrs/julia-1-9"]
julia-1-10 = ["jlrs/julia-1-10"]

# This library can be compiled with BinaryBuilder. The recipe can be found here:
# https://github.com/JuliaPackaging/Yggdrasil/tree/master/R/rustfft_jl/build_tarballs.jl
#
# This recipe does two things to build this library:
#
# 1. determine the version feature that needs to be enabled
# 2. build the library with the yggdrasil feature and version feature from step 1
yggdrasil = ["jlrs/yggdrasil"]

# Setting these flags is required when cross-compiling from other platforms. When BinaryBuilder is
# used, only the yggdrasil feature needs to be enabled.
i686 = ["jlrs/i686"]
windows = ["jlrs/windows"]

[lib]
# We only want to build a cdylib, i.e. a dynamic system library.
crate-type = ["cdylib"]

[dependencies]
rustfft = "6"
jlrs = { version = "0.18.0-beta.0", git = "https://github.com/Taaitaaiger/jlrs", rev = "759efb2", features = ["ccall", "jlrs-derive", "uv"] }
